const registerBtn = document.getElementById('register-btn');
const loginBtn = document.getElementById('login-btn');
const regUsernameInput = document.getElementById('reg-username');
const loginUsernameInput = document.getElementById('login-username');
const authMsg = document.getElementById('auth-msg');

const authSection = document.getElementById('auth-section');
const bankSection = document.getElementById('bank-section');
const currentUserSpan = document.getElementById('current-user');
const balanceAmount = document.getElementById('balance-amount');
const transferToInput = document.getElementById('transfer-to');
const transferAmountInput = document.getElementById('transfer-amount');
const transferBtn = document.getElementById('transfer-btn');
const transferMsg = document.getElementById('transfer-msg');
const historyList = document.getElementById('history-list');
const logoutBtn = document.getElementById('logout-btn');

const STORAGE_KEY = 'game_bank_users';
const CURRENT_USER_KEY = 'game_bank_current_user';

let users = {};
let currentUser = null;

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ localStorage
function loadUsers() {
  const data = localStorage.getItem(STORAGE_KEY);
  users = data ? JSON.parse(data) : {};
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ localStorage
function saveUsers() {
  localStorage.setItem(STORAGE_KEY, JSON.stringify(users));
}

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
registerBtn.addEventListener('click', () => {
  const username = regUsernameInput.value.trim().toLowerCase();
  if (!username) {
    authMsg.textContent = '–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏';
    return;
  }
  if (users[username]) {
    authMsg.textContent = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –Ω–∏–∫–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç';
    return;
  }
  users[username] = {
    balance: 100, // —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å
    history: []
  };
  saveUsers();
  authMsg.style.color = 'green';
  authMsg.textContent = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "${username}" –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω! –í–æ–π–¥–∏—Ç–µ.`;
  regUsernameInput.value = '';
});

// –í—Ö–æ–¥
loginBtn.addEventListener('click', () => {
  const username = loginUsernameInput.value.trim().toLowerCase();
  if (!username) {
    authMsg.textContent = '–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –¥–ª—è –≤—Ö–æ–¥–∞';
    return;
  }
  if (!users[username]) {
    authMsg.textContent = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω';
    return;
  }
  currentUser = username;
  localStorage.setItem(CURRENT_USER_KEY, currentUser);
  authMsg.textContent = '';
  showBank();
});

// –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–∞–Ω–∫–∞
function showBank() {
  authSection.hidden = true;
  bankSection.hidden = false;
  currentUserSpan.textContent = currentUser;
  updateBalanceUI();
  updateHistoryUI();
  transferMsg.textContent = '';
  transferToInput.value = '';
  transferAmountInput.value = '';
}

// –û–±–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å
function updateBalanceUI() {
  balanceAmount.textContent = users[currentUser].balance.toFixed(2);
}

// –û–±–Ω–æ–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é
function updateHistoryUI() {
  historyList.innerHTML = '';
  const history = users[currentUser].history;
  if (history.length === 0) {
    historyList.innerHTML = '<li>–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞</li>';
    return;
  }
  for (const entry of history.slice().reverse()) {
    const li = document.createElement('li');
    li.textContent = entry;
    historyList.appendChild(li);
  }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–µ–Ω–µ–≥
transferBtn.addEventListener('click', () => {
  transferMsg.style.color = 'red';
  const toUserRaw = transferToInput.value.trim().toLowerCase();
  const amountRaw = transferAmountInput.value.trim();

  if (!toUserRaw || !amountRaw) {
    transferMsg.textContent = '–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –∏ —Å—É–º–º—É';
    return;
  }
  if (!users[toUserRaw]) {
    transferMsg.textContent = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω';
    return;
  }
  if (toUserRaw === currentUser) {
    transferMsg.textContent = '–ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏ —Å–∞–º–æ–º—É —Å–µ–±–µ';
    return;
  }

  const amount = parseFloat(amountRaw);
  if (isNaN(amount) || amount <= 0) {
    transferMsg.textContent = '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É';
    return;
  }

  if (users[currentUser].balance < amount) {
    transferMsg.textContent = '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤';
    return;
  }

  // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ–¥
  users[currentUser].balance -= amount;
  users[toUserRaw].balance += amount;

  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
  const now = new Date();
  const timeStr = now.toLocaleString();
  const sentMsg = `–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ ${amount.toFixed(2)} ü™ô –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é "${toUserRaw}" (${timeStr})`;
  const recMsg = `–í—ã –ø–æ–ª—É—á–∏–ª–∏ ${amount.toFixed(2)} ü™ô –æ—Ç "${currentUser}" (${timeStr})`;

  users[currentUser].history.push(sentMsg);
  users[toUserRaw].history.push(recMsg);

  saveUsers();
  updateBalanceUI();
  updateHistoryUI();

  transferMsg.style.color = 'green';
  transferMsg.textContent = '–ü–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!';

  transferToInput.value = '';
  transferAmountInput.value = '';
});

// –í—ã—Ö–æ–¥
logoutBtn.addEventListener('click', () => {
  currentUser = null;
  localStorage.removeItem(CURRENT_USER_KEY);
  bankSection.hidden = true;
  authSection.hidden = false;
  authMsg.textContent = '';
  regUsernameInput.value = '';
  loginUsernameInput.value = '';
});

// –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('load', () => {
  loadUsers();
  const savedUser = localStorage.getItem(CURRENT_USER_KEY);
  if (savedUser && users[savedUser]) {
    currentUser = savedUser;
    showBank();
  }
});
